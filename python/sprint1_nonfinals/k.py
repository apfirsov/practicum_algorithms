"""
Вася просил Аллу помочь решить задачу. На этот раз по информатике.

Для неотрицательного целого числа X списочная форма –— это
массив его цифр слева направо.
К примеру, для 1231 списочная форма будет [1,2,3,1].
На вход подается количество цифр числа Х, списочная форма неотрицательного
числа Х и неотрицательное число K. Числа К и Х не превосходят 10000.

Нужно вернуть списочную форму числа X + K.

Формат ввода
В первой строке — длина списочной формы числа X.
На следующей строке — сама списочная форма с цифрами записанными через пробел.
В последней строке записано число K, 0 ≤ K ≤ 10000.

Формат вывода
Выведите списочную форму числа X+K.
"""
from typing import List, Tuple


def get_sum(n: int, number_list: List[int], k: int) -> List[str]:
    "ID: 70329126."
    x: int = 0
    TEN: int = 10
    for i in range(n-1, -1, -1):
        x = x + number_list[i] * TEN**(n - 1 - i)

    return [i for i in str(x + k)]


def read_input() -> Tuple[int, List[int], int]:
    n = int(input())
    number_list = list(map(int, input().strip().split()))
    k = int(input())
    return n, number_list, k


print(" ".join(get_sum(*read_input())))
